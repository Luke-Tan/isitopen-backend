{"version":3,"sources":["config.js","socket.js","actions/collectionAction.js","actionTypes.js","components/ShareCollectionModal.js","components/RenameCollectionModal.js","components/Collections.js","components/AddRestaurantModal.js","components/Restaurants.js","App.js","serviceWorker.js","reducers/collectionReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["config","console","log","process","baseUrl","socketUrl","socket","io","connect","fetchCollections","collectionIds","dispatch","axios","get","params","then","response","collections","data","type","payload","catch","error","ShareCollectionModal","state","emailRecipients","addEmailRecipient","setState","handleEmailChange","event","index","target","dataset","value","shareCollection","collection","props","post","emails","closeModal","Modal","show","this","showModal","onHide","Header","closeButton","Title","Body","style","textAlign","map","email","Form","Control","key","onChange","id","data-index","marginBottom","placeholder","Button","variant","onClick","Footer","Component","name","handleNameChange","setName","renameCollection","collectionId","_id","onEnter","Collections","editingName","shareModalCollection","renameModalCollection","showShareModal","showRenameModal","removeFromCollection","restaurantId","deleteCollection","closeShareModal","closeRenameModal","invitedCollection","URLSearchParams","window","location","search","localStorage","getItem","JSON","parse","includes","push","stringify","setItem","emit","Container","Row","Col","sm","Card","margin","wordBreak","display","alignItems","color","cursor","marginRight","marginLeft","icon","faEdit","faTrash","ListGroup","restaurants","restaurant","innerIndex","Item","faMinusCircle","justifyContent","backgroundColor","borderTop","faEnvelope","collectionReducer","AddRestaurantModal","checkboxes","closeAddRestaurantModal","handleChange","checked","addToCollections","newCollectionName","document","getElementById","createCollection","setCheckboxes","title","horizontal","height","flex","marginTop","padding","width","Check","data-id","storedCollectionIds","SECONDS_IN_DAY","DAYS","TEN_AM","Restaurants","time","toggleTime","searchedName","selectedDays","items","filteredRestaurants","modalTitle","modalId","modalCheckboxes","filterName","clearTimeout","timer","setTimeout","filterRestaurants","filterTime","filterDay","day","i","length","toLowerCase","timeFound","start","end","indexOf","forEach","MyList","virtual","itemHeight","item","flexDirection","className","openingHours","fontSize","faPlus","MyVirtualList","VirtualList","paddingTop","paddingBottom","Group","controlId","Label","data-day","inline","label","disabled","step","App","Tabs","transition","defaultActiveKey","Tab","eventKey","Boolean","hostname","match","initialState","combineReducers","action","collectionIndex","findIndex","restaurantIndex","splice","store","createStore","rootReducer","applyMiddleware","thunk","on","removedFromCollection","addedToCollection","collectionIdIndex","deletedCollection","renamedCollection","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.954e0167.chunk.js","sourcesContent":["const config = {}\n\nconsole.log(process.env.NODE_ENV);\nconfig.baseUrl = process.env.NODE_ENV == \"production\" ? \"http://glints-luke.herokuapp.com\" : \"http://localhost:8080\"\nconfig.socketUrl = process.env.NODE_ENV == \"production\" ? \"https://glints-luke.herokuapp.com\" : \"http://localhost:8080\"\n\nexport default config\n","import io from \"socket.io-client\"\nimport config from \"./config\"\nconst socket = io(config.socketUrl)\nsocket.connect()\n\nexport default socket\n","import {\n  UPDATE_COLLECTIONS,\n  REMOVED_FROM_COLLECTION,\n  RENAMED_COLLECTION,\n  DELETED_COLLECTION,\n  ADDED_TO_COLLECTION,\n  FETCH_COLLECTIONS,\n  CREATE_COLLECTION\n} from \"../actionTypes\"\n\nimport axios from \"axios\"\n\nimport socket from \"../socket\"\n\nimport config from \"../config\"\n\nexport const removedFromCollection = data => {\n  const { collectionId, restaurantId } = data\n  return {\n    type: REMOVED_FROM_COLLECTION,\n    payload: {\n      collectionId,\n      restaurantId\n    }\n  }\n}\n\nexport const addedToCollection = data => {\n  const { restaurant, collectionId } = data\n  return {\n    type: ADDED_TO_COLLECTION,\n    payload: {\n      restaurant,\n      collectionId\n    }\n  }\n}\n\nexport const renamedCollection = data => dispatch => {\n  const { collectionId, name } = data\n  dispatch({\n    type: RENAMED_COLLECTION,\n    payload: {\n      collectionId,\n      name\n    }\n  })\n}\n\nexport const deletedCollection = data => {\n  const { collectionId } = data\n  // Remove the key from localstorage but not technically necessary\n  const collectionIds = JSON.parse(localStorage.getItem(\"collectionIds\")) || []\n  const collectionIdIndex = collectionIds.findIndex(\n    collection => collection._id === collectionId\n  )\n  collectionIds.splice(collectionIdIndex, 1)\n  localStorage.setItem(\"collectionIds\", JSON.stringify(collectionIds))\n  return {\n    type: DELETED_COLLECTION,\n    payload: {\n      collectionId\n    }\n  }\n}\n\nexport const createCollection = (name, restaurantId) => dispatch => {\n  axios\n    .post(`${config.baseUrl}/api/CreateRestaurantCollection`, {\n      name,\n      restaurantId\n    })\n    .then(response => {\n      const collection = response.data\n      let storedCollectionIds =\n        JSON.parse(localStorage.getItem(\"collectionIds\")) || []\n      storedCollectionIds.push(collection._id)\n      localStorage.setItem(\"collectionIds\", JSON.stringify(storedCollectionIds))\n      socket.emit(\"subscription\", collection._id)\n      dispatch({\n        type: CREATE_COLLECTION,\n        payload: {\n          collection\n        }\n      })\n    })\n    .catch(function(error) {\n      console.log(error)\n    })\n}\n\nexport const fetchCollections = collectionIds => dispatch => {\n  axios\n    .get(`${config.baseUrl}/api/GetRestaurantCollections`, {\n      params: {\n        collectionIds: collectionIds\n      }\n    })\n    .then(response => {\n      const collections = response.data\n      dispatch({\n        type: FETCH_COLLECTIONS,\n        payload: {\n          collections\n        }\n      })\n    })\n    .catch(function(error) {\n      console.log(error)\n    })\n}\n","export const UPDATE_COLLECTIONS = \"UPDATE_COLLECTIONS\"\nexport const REMOVED_FROM_COLLECTION = \"REMOVED_FROM_COLLECTION\"\nexport const RENAMED_COLLECTION = \"RENAMED_COLLECTION\"\nexport const DELETED_COLLECTION = \"DELETED_COLLECTION\"\nexport const ADDED_TO_COLLECTION = \"ADDED_TO_COLLECTION\"\n\nexport const FETCH_COLLECTIONS = \"FETCH_COLLECTIONS\"\nexport const CREATE_COLLECTION = \"CREATE_COLLECTION\"\nexport const REMOVE_FROM_COLLECTION = \"REMOVE_FROM_COLLECTION\"\nexport const DELETE_COLLECTION = \"DELETE_COLLECTION\"\nexport const ADD_TO_COLLECTION = \"ADD_TO_COLLECTION\"\n","import React, { Component } from \"react\"\nimport { Modal, Button, Form } from \"react-bootstrap\"\n\nimport axios from \"axios\"\n\nimport config from \"../config\"\n\nexport default class ShareCollectionModal extends Component {\n  state = {\n    emailRecipients: [\"\"]\n  }\n\n  addEmailRecipient = () => {\n    this.setState({\n      emailRecipients: [...this.state.emailRecipients, \"\"]\n    })\n  }\n\n  handleEmailChange = event => {\n    const { emailRecipients } = this.state\n    const { index } = event.target.dataset\n    const { value } = event.target\n    emailRecipients[index] = value\n    this.setState({\n      emailRecipients\n    })\n  }\n\n  shareCollection = () => {\n    const { emailRecipients } = this.state\n    const { collection } = this.props\n    axios\n      .post(`${config.baseUrl}/api/InviteFriends`, {\n        emails: emailRecipients,\n        collection\n      })\n      .then(response => {\n        //\n      })\n      .catch(function(error) {\n        console.log(error)\n      })\n    this.props.closeModal()\n  }\n\n  render() {\n    return (\n      <Modal show={this.props.showModal} onHide={this.props.closeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>{`Share`}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={{ textAlign: \"center\" }}>\n          {this.state.emailRecipients.map((email, index) => (\n            <Form.Control\n              key={`share-email-input-${index}`}\n              onChange={this.handleEmailChange}\n              value={email}\n              id={`share-email-input-${index}`}\n              data-index={index}\n              style={{ marginBottom: \"1rem\" }}\n              placeholder=\"johndoe@gmail.com\"\n            />\n          ))}\n          <Button variant=\"primary\" onClick={this.addEmailRecipient}>\n            Add\n          </Button>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={this.shareCollection}>\n            Share\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Modal, Button, Form } from \"react-bootstrap\"\n\nimport axios from \"axios\"\n\nimport config from \"../config\"\n\nexport default class ShareCollectionModal extends Component {\n  state = {\n    name: \"\"\n  }\n\n  handleNameChange = event => {\n    this.setState({\n      name: event.target.value\n    })\n  }\n\n  setName = () => {\n    const { name } = this.props.collection\n    this.setState({\n      name\n    })\n  }\n  renameCollection = () => {\n    const { name } = this.state\n    const { collection } = this.props\n    const collectionId = collection._id\n    console.log(collectionId)\n    console.log(name)\n    axios\n      .post(`${config.baseUrl}/api/RenameRestaurantCollection`, {\n        collectionId,\n        name\n      })\n      .then(response => {})\n      .catch(function(error) {\n        console.log(error)\n      })\n    this.props.closeModal()\n  }\n\n  render() {\n    return (\n      <Modal\n        onEnter={this.setName}\n        show={this.props.showModal}\n        onHide={this.props.closeModal}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{`Rename collection`}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={{ textAlign: \"center\" }}>\n          <Form.Control\n            onChange={this.handleNameChange}\n            value={this.state.name}\n            style={{ marginBottom: \"1rem\" }}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={this.renameCollection}>\n            Rename\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n","//Npm imports\nimport React, { Component } from \"react\"\nimport { Container, Col, Card, ListGroup, Row } from \"react-bootstrap\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n  faMinusCircle,\n  faTrash,\n  faEnvelope,\n  faEdit\n} from \"@fortawesome/free-solid-svg-icons\"\nimport axios from \"axios\"\n//Redux\nimport { connect } from \"react-redux\"\nimport { fetchCollections } from \"../actions/collectionAction\"\n//Components\nimport ShareCollectionModal from \"./ShareCollectionModal\"\nimport RenameCollectionModal from \"./RenameCollectionModal\"\n//Socket.io\nimport socket from \"../socket\"\n//Config\nimport config from \"../config\"\n\nclass Collections extends Component {\n  state = {\n    name: \"\",\n    editingName: {},\n    shareModalCollection: {},\n    renameModalCollection: {},\n    showShareModal: false,\n    showRenameModal: false\n  }\n\n  constructor(props) {\n    super(props)\n    //Add invited collection by url param to localstorage\n    const urlParams = new URLSearchParams(window.location.search)\n    const invitedCollection = urlParams.get(\"invitedCollection\")\n    let collectionIds = localStorage.getItem(\"collectionIds\") || \"[]\"\n    if (invitedCollection) {\n      collectionIds = JSON.parse(collectionIds)\n      if (!collectionIds.includes(invitedCollection))\n        collectionIds.push(invitedCollection)\n      collectionIds = JSON.stringify(collectionIds)\n      localStorage.setItem(\"collectionIds\", collectionIds)\n    }\n    //Subscribe to changes to all owned collections\n    socket.emit(\n      \"initialSubscription\",\n      JSON.parse(localStorage.getItem(\"collectionIds\"))\n    )\n    //Fetch the collections and load into redux state\n    this.props.fetchCollections(collectionIds)\n  }\n\n  removeFromCollection = (collectionId, restaurantId) => {\n    axios\n      .post(`${config.baseUrl}/api/RemoveFromRestaurantCollection`, {\n        collectionId,\n        restaurantId\n      })\n      .then(response => {\n        //pass\n      })\n      .catch(function(error) {\n        console.log(error)\n      })\n  }\n\n  deleteCollection = collectionId => {\n    axios\n      .post(`${config.baseUrl}/api/DeleteRestaurantCollection`, {\n        collectionId\n      })\n      .then(response => {})\n      .catch(function(error) {\n        console.log(error)\n      })\n  }\n\n  renameCollection = collectionId => {\n    const { name } = this.state\n    axios\n      .post(`${config.baseUrl}/api/RenameRestaurantCollection`, {\n        collectionId,\n        name: \"lols\"\n      })\n      .then(response => {})\n      .catch(function(error) {\n        console.log(error)\n      })\n  }\n\n  showShareModal = collection => {\n    this.setState({\n      shareModalCollection: collection,\n      showShareModal: true\n    })\n  }\n\n  closeShareModal = () => {\n    this.setState({\n      showShareModal: false\n    })\n  }\n\n  showRenameModal = collection => {\n    this.setState({\n      renameModalCollection: collection,\n      showRenameModal: true\n    })\n  }\n\n  closeRenameModal = () => {\n    this.setState({\n      showRenameModal: false\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Container>\n          {/*<Row style={{paddingTop:'25px'}}>\n\t\t\t\t\t  <Button style={{fontWeight:'600'}} variant=\"primary\" size=\"lg\" block>\n\t\t\t\t\t  \t<FontAwesomeIcon style={{marginRight:'5px'}}icon={faPlus} />\n\t\t\t\t\t    Create new collection\n\t\t\t\t\t  </Button>\n\t\t\t\t  </Row>*/}\n          <Row>\n            {this.props.collections.map((collection, index) => (\n              <Col key={`restaurant-collection-${index}`} sm={4}>\n                <Card style={{ margin: \"25px\" }}>\n                  <Card.Header\n                    style={{\n                      wordBreak: \"break-all\",\n                      display: \"flex\",\n                      alignItems: \"center\"\n                    }}\n                  >\n                    {collection.name}\n                    <FontAwesomeIcon\n                      onClick={() => {\n                        this.showRenameModal(collection)\n                      }}\n                      style={{\n                        color: \"grey\",\n                        cursor: \"pointer\",\n                        display: \"block\",\n                        marginRight: \"auto\",\n                        marginLeft: \"8px\"\n                      }}\n                      icon={faEdit}\n                    />\n                    <FontAwesomeIcon\n                      onClick={() => {\n                        this.deleteCollection(collection._id)\n                      }}\n                      style={{\n                        color: \"red\",\n                        cursor: \"pointer\",\n                        display: \"block\",\n                        marginLeft: \"auto\"\n                      }}\n                      icon={faTrash}\n                    />\n                  </Card.Header>\n                  <ListGroup variant=\"flush\">\n                    {collection.restaurants.map((restaurant, innerIndex) => (\n                      <ListGroup.Item\n                        style={{\n                          wordBreak: \"break-all\",\n                          display: \"flex\",\n                          alignItems: \"center\"\n                        }}\n                        key={`restaurant-collection-${index}-${innerIndex}`}\n                      >\n                        {restaurant.name}\n                        <FontAwesomeIcon\n                          onClick={() => {\n                            this.removeFromCollection(\n                              collection._id,\n                              restaurant._id\n                            )\n                          }}\n                          style={{\n                            color: \"red\",\n                            cursor: \"pointer\",\n                            display: \"block\",\n                            marginLeft: \"auto\"\n                          }}\n                          icon={faMinusCircle}\n                        />\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                  <Card.Footer\n                    onClick={() => {\n                      this.showShareModal(collection)\n                    }}\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      cursor: \"pointer\",\n                      backgroundColor: \"rgb(91, 168, 251)\",\n                      color: \"white\",\n                      textAlign: \"center\",\n                      borderTop: \"0px\"\n                    }}\n                  >\n                    <FontAwesomeIcon\n                      style={{ color: \"white\", marginRight: \"10px\" }}\n                      icon={faEnvelope}\n                    />\n                    Share\n                  </Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Container>\n        <ShareCollectionModal\n          showModal={this.state.showShareModal}\n          collection={this.state.shareModalCollection}\n          closeModal={this.closeShareModal}\n        />\n        <RenameCollectionModal\n          showModal={this.state.showRenameModal}\n          collection={this.state.renameModalCollection}\n          closeModal={this.closeRenameModal}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  collections: state.collectionReducer.collections\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollections: collectionIds => {\n    dispatch(fetchCollections(collectionIds))\n  }\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Collections)\n","import React, { Component } from \"react\"\nimport { Modal, ListGroup, Form, Button } from \"react-bootstrap\"\nimport axios from \"axios\"\nimport { connect } from \"react-redux\"\nimport { createCollection } from \"../actions/collectionAction\"\nimport config from \"../config\"\n\nclass AddRestaurantModal extends Component {\n  state = {\n    checkboxes: {}\n  }\n  \n  closeAddRestaurantModal = () => {\n    this.setState({\n      checkboxes: {}\n    })\n  }\n\n  handleChange = event => {\n    const { checkboxes } = this.state\n    const { id } = event.target.dataset\n    const { checked } = event.target\n    this.setState({\n      checkboxes: {\n        ...checkboxes,\n        [id]: checked\n      }\n    })\n  }\n\n  addToCollections = () => {\n    const { checkboxes } = this.state\n    const { id } = this.props\n    const newCollectionName = document.getElementById(\"new-collection-input\")\n      .value\n    let collectionIds = []\n    for (let key in checkboxes) {\n      if (checkboxes[key]) collectionIds.push(key)\n    }\n    axios\n      .post(`${config.baseUrl}/api/AddToRestaurantCollections`, {\n        collectionIds: JSON.stringify(collectionIds),\n        restaurantId: id\n      })\n      .then(response => {\n        // pass\n      })\n      .catch(function(error) {\n        console.log(error)\n      })\n\n    //This creates a new collection\n    if (newCollectionName) {\n      this.props.createCollection(newCollectionName, id)\n    }\n    this.props.closeModal()\n  }\n\n  render() {\n    return (\n      <Modal onEnter={this.setCheckboxes} show={this.props.showModal} onHide={this.props.closeModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Control\n            id=\"new-collection-input\"\n            placeholder=\"New collection\"\n          />\n          {this.props.collections.map((collection, index) => {\n            const { _id, name } = collection\n            return (\n              <ListGroup\n                key={`collection-${_id}`}\n                horizontal\n                style={{ height: \"38px\", flex: 1, marginTop: \"10px\" }}\n              >\n                <ListGroup.Item style={{ flex: 1, padding: \"0.4rem 0.75rem\" }}>\n                  {name}\n                </ListGroup.Item>\n                <ListGroup.Item\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    width: \"38px\"\n                  }}\n                >\n                  <Form.Check\n                    style={{ padding: 0 }}\n                    checked={this.state.checkboxes[_id]}\n                    onChange={this.handleChange}\n                    data-id={_id}\n                    type={\"checkbox\"}\n                    id={`checkbox-${_id}`}\n                  />\n                </ListGroup.Item>\n              </ListGroup>\n            )\n          })}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={this.closeAddRestaurantModal}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={this.addToCollections}>\n            Add\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  collections: state.collectionReducer.collections\n})\n\nconst mapDispatchToProps = dispatch => ({\n  createCollection: (name, restaurantId) => {\n    dispatch(createCollection(name, restaurantId))\n  }\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddRestaurantModal)\n","// Npm imports\nimport React, { Component } from \"react\"\nimport { Container, Form, ListGroup } from \"react-bootstrap\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\"\nimport VirtualList from \"react-virtual-list\"\nimport TimePicker from \"react-bootstrap-time-picker\"\nimport axios from \"axios\"\n//Redux\nimport { connect } from \"react-redux\"\n//Components\nimport AddRestaurantModal from \"./AddRestaurantModal\"\n//Config\nimport config from \"../config\"\n\nconst SECONDS_IN_DAY = 24 * 60 * 60\nconst DAYS = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"]\nconst TEN_AM = 10 * 60 * 60 // Default starting filter time\n\nclass Restaurants extends Component {\n  timer\n\n  state = {\n    time: TEN_AM,\n    toggleTime: false,\n    searchedName: \"\",\n    selectedDays: {},\n    items: [],\n    filteredRestaurants: [],\n\n    showModal: false,\n    modalTitle: \"\",\n    modalId: \"\",\n    modalCheckboxes: {}\n  }\n\n  constructor(props) {\n    super(props)\n    let selectedDays = {}\n    // Create an obj that holds all of the days with a corresponding checked value, default all to true\n    DAYS.forEach(day => (selectedDays[day] = true))\n    this.state.selectedDays = selectedDays\n    axios\n      .get(`${config.baseUrl}/api/GetData`)\n      .then(response => {\n        const { data } = response\n        console.log(data);\n        this.setState({\n          items: data,\n          filteredRestaurants: data\n        })\n      })\n      .catch(function(error) {\n        console.log(error)\n      })\n  }\n\n  filterName = event => {\n    const { value } = event.target\n    clearTimeout(this.timer)\n    this.timer = setTimeout(() => {\n      const searchedName = value\n      this.setState({ searchedName }, () => {\n        this.filterRestaurants()\n      })\n    }, 300)\n  }\n\n  filterTime = time => {\n    this.setState({ time }, () => {\n      this.filterRestaurants()\n    })\n  }\n\n  filterDay = event => {\n    const { selectedDays } = this.state\n    const { day } = event.target.dataset\n    const { checked } = event.target\n    this.setState(\n      {\n        selectedDays: {\n          ...selectedDays,\n          [day]: checked\n        }\n      },\n      () => {\n        this.filterRestaurants()\n      }\n    )\n  }\n\n  filterRestaurants = () => {\n    let filteredRestaurants = []\n    let { items, searchedName, time, selectedDays, toggleTime } = this.state\n    for (let i = 0; i < items.length; i++) {\n      const name = items[i][\"name\"].toLowerCase()\n      let timeFound = false\n      for (let day in selectedDays) {\n        // First filter by the selected day(s)\n        if (selectedDays[day]) {\n          let { start, end } = items[i][\"time\"][day.toLowerCase()]\n          // If the end is less than the start, we must add 24 hours to it is counted as the next day\n          // Not sure if this logic should be moved to database\n          if (end < start) {\n            end += SECONDS_IN_DAY\n          }\n          // Then, filter by the selected time\n          // We aren't sure which 'day' the specified time lands on, so we check both and return a match if either is satisfied\n          const withinTimeRange =\n            (start <= time && end >= time) ||\n            (start <= time + SECONDS_IN_DAY && end >= time + SECONDS_IN_DAY) ||\n            !toggleTime\n          timeFound = withinTimeRange\n          if (timeFound) break\n        }\n      }\n      // Finally, filter by the searched name\n      if (name.indexOf(searchedName) !== -1 && timeFound) {\n        filteredRestaurants.push(items[i])\n      }\n    }\n    this.setState({ filteredRestaurants })\n  }\n\n  toggleTime = event => {\n    const { checked } = event.target\n    this.setState(\n      {\n        toggleTime: checked\n      },\n      () => {\n        this.filterRestaurants()\n      }\n    )\n  }\n\n  showModal = restaurant => {\n    const { _id, name } = restaurant\n    let modalCheckboxes = {}\n    this.props.collections.forEach(\n      collection => (modalCheckboxes[collection._id] = false)\n    )\n    this.setState({\n      showModal: true,\n      modalTitle: name,\n      modalId: _id,\n      modalCheckboxes\n    })\n  }\n\n  closeModal = () => {\n    this.setState({\n      showModal: false\n    })\n  }\n\n  MyList = ({ virtual, itemHeight }) => (\n    <ListGroup style={virtual.style}>\n      {virtual.items.map((item, index) => {\n        return (\n          <div\n            key={index}\n            style={{\n              height: itemHeight,\n              display: \"flex\",\n              flexDirection: \"row\"\n            }}\n          >\n            <ListGroup horizontal style={{ flex: 1, marginBottom: \"10px\" }}>\n              <ListGroup.Item className={\"list-item\"}>\n                {item.name}\n              </ListGroup.Item>\n              <ListGroup.Item className={\"list-item\"}>\n                {item.openingHours}\n              </ListGroup.Item>\n              <ListGroup.Item\n                variant={\"primary\"}\n                style={{\n                  cursor: \"pointer\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  width: itemHeight\n                }}\n                onClick={() => {\n                  this.showModal(item)\n                }}\n              >\n                <FontAwesomeIcon style={{ fontSize: \"30px\" }} icon={faPlus} />\n              </ListGroup.Item>\n            </ListGroup>\n          </div>\n        )\n      })}\n    </ListGroup>\n  )\n  render() {\n    const MyVirtualList = VirtualList()(this.MyList)\n    return (\n      <div>\n        <Container style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}>\n          <div>\n            <Form.Group controlId=\"formBasicName\">\n              <Form.Label>Search</Form.Label>\n              <Form.Control\n                onChange={this.filterName}\n                placeholder=\"Restaurant Name\"\n              />\n            </Form.Group>\n            <Form>\n              <div className=\"mb-3\">\n                {DAYS.map((day, index) => (\n                  <Form.Check\n                    checked={this.state.selectedDays[day]}\n                    onChange={this.filterDay}\n                    key={`checkbox-${day}`}\n                    data-day={day}\n                    inline\n                    label={day}\n                    type={\"checkbox\"}\n                    id={`checkbox-${day}`}\n                  />\n                ))}\n              </div>\n            </Form>\n            <Form.Check\n              checked={this.state.toggleTime}\n              onChange={this.toggleTime}\n              inline\n              label={\"Time\"}\n              type={\"checkbox\"}\n            />\n            <TimePicker\n              disabled={!this.state.toggleTime}\n              style={{ display: \"inline-block\", width: \"90%\" }}\n              onChange={this.filterTime}\n              value={this.state.time}\n              start=\"00:00\"\n              end=\"23:59\"\n              step={30}\n            />\n          </div>\n          <h3\n            style={{\n              marginTop: \"20px\",\n              marginBottom: \"20px\",\n              textAlign: \"center\"\n            }}\n          >\n            {\" \"}\n            Restaurants{\" \"}\n          </h3>\n          <MyVirtualList\n            items={this.state.filteredRestaurants}\n            itemHeight={85}\n          />\n        </Container>\n        <AddRestaurantModal\n          showModal={this.state.showModal}\n          title={this.state.modalTitle}\n          id={this.state.modalId}\n          closeModal={this.closeModal}\n        />\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  collections: state.collectionReducer.collections\n})\n\nconst mapDispatchToProps = dispatch => ({})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Restaurants)\n","//Npm imports\nimport React, { Component } from \"react\"\nimport { Tabs, Tab } from \"react-bootstrap\"\n\n//CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\n//Components\nimport Collections from \"./components/Collections\"\nimport Restaurants from \"./components/Restaurants\"\n\n// Redux\nimport { connect } from \"react-redux\"\nimport { fetchCollections } from \"./actions/collectionAction\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        {/*<Tabs style={{paddingTop:'10px'}}transition={false} defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">*/}\n        <Tabs\n          style={{ paddingTop: \"10px\" }}\n          transition={false}\n          defaultActiveKey=\"home\"\n        >\n          <Tab title={<h3>Is it open?</h3>} disabled />\n          <Tab eventKey=\"home\" title=\"Home\">\n            <Restaurants />\n          </Tab>\n          <Tab eventKey=\"collections\" title=\"Collections\">\n            <Collections />\n          </Tab>\n        </Tabs>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollections: collectionIds => {\n    dispatch(fetchCollections(collectionIds))\n  }\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import {\n  UPDATE_COLLECTIONS,\n  REMOVED_FROM_COLLECTION,\n  RENAMED_COLLECTION,\n  DELETED_COLLECTION,\n  ADDED_TO_COLLECTION,\n  CREATE_COLLECTION,\n  FETCH_COLLECTIONS\n} from \"../actionTypes\"\n\nlet initialState = {\n  collections: []\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case RENAMED_COLLECTION: {\n      const { collectionId, name } = action.payload\n      let collections = [...state.collections]\n      const collectionIndex = collections.findIndex(\n        collection => collection._id === collectionId\n      )\n      collections[collectionIndex][\"name\"] = name\n      return {\n        ...state,\n        collections\n      }\n    }\n    case REMOVED_FROM_COLLECTION: {\n      const { collectionId, restaurantId } = action.payload\n      let collections = [...state.collections]\n      const collectionIndex = collections.findIndex(\n        collection => collection._id === collectionId\n      )\n      let restaurants = [...collections[collectionIndex].restaurants] //Create a clone so we don't mess up when using splice\n      const restaurantIndex = restaurants.findIndex(\n        restaurant => restaurant._id === restaurantId\n      )\n      restaurants.splice(restaurantIndex, 1)\n      collections[collectionIndex].restaurants = restaurants\n      return {\n        ...state,\n        collections\n      }\n    }\n    case ADDED_TO_COLLECTION: {\n      const { restaurant, collectionId } = action.payload\n      let collections = [...state.collections]\n      for (let collection of collections) {\n        if (collection._id === collectionId) {\n          collection.restaurants.push(restaurant)\n          break\n        }\n      }\n      return {\n        ...state,\n        collections\n      }\n    }\n    case DELETED_COLLECTION: {\n      const { collectionId } = action.payload\n      let collections = [...state.collections]\n      const collectionIndex = collections.findIndex(\n        collection => collection._id === collectionId\n      )\n      collections.splice(collectionIndex, 1)\n      return {\n        ...state,\n        collections\n      }\n    }\n    case FETCH_COLLECTIONS: {\n      const { collections } = action.payload\n      return {\n        ...state,\n        collections\n      }\n    }\n    case CREATE_COLLECTION: {\n      const { collection } = action.payload\n      return {\n        ...state,\n        collections: [...state.collections, collection]\n      }\n    }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from \"redux\"\nimport collectionReducer from \"./collectionReducer\"\n\nexport default combineReducers({\n  collectionReducer\n})\n","import { createStore, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport rootReducer from \"./reducers/rootReducer\"\nimport socket from \"./socket\"\n\n// Actions\nimport {\n  removedFromCollection,\n  addedToCollection,\n  deletedCollection,\n  renamedCollection\n} from \"./actions/collectionAction\"\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\n//For all actions that require socket.io reactivity\nsocket.on(\"restaurantRemoved\", data => {\n  store.dispatch(removedFromCollection(data))\n})\n\nsocket.on(\"restaurantAdded\", data => {\n  store.dispatch(addedToCollection(data))\n})\n\nsocket.on(\"collectionDeleted\", data => {\n  store.dispatch(deletedCollection(data))\n})\n\nsocket.on(\"collectionRenamed\", data => {\n  store.dispatch(renamedCollection(data))\n})\n\nexport default store\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\n// Redux\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\n\n// Render the App\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}